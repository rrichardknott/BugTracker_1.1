@model BugTracker_1._1.Models.Ticket

@{
    ViewBag.Page = "Ticket Edit";
}

<div id="ticketEditContainer">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="ticketEditColumnsContainer">
            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ProjectId)
            @Html.HiddenFor(model => model.Created)
            @Html.HiddenFor(model => model.SubmitterId)


            <div id="ticketEditLeftColumn">
                <div class="form-group">
                    @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="submit" value="Save" class="btn backgroundDarkBlue text-white width-18" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn backgroundDarkBlue text-white width-18"})
                    </div>

                </div>
            </div><!--end ticketEditLeftColumn-->

            <div id="ticketEditRightColumn">

                @if (User.IsInRole("Admin") || (User.IsInRole("Project Manager")))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeveloperId, "Developer", htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                        <div class="col-md-10">
                            @Html.DropDownList("DeveloperId", null, "--Select Developer--", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Issue, "Short Description", htmlAttributes: new { @class = "control-label col-md-3 font-weight-bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Issue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IssueDescription, "Description", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IssueDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IssueDescription, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div id="ticketEditIsResolvedAndIsArchivedCheckboxContainer">
                    @Html.LabelFor(model => model.IsResloved, "Resolved", htmlAttributes: new { @class = "font-weight-bold", id = "ticketEditIsResolvedCheckbox" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsResloved)
                        @Html.ValidationMessageFor(model => model.IsResloved, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.IsArchived, "Archived", htmlAttributes: new { @class = "font-weight-bold", id = "ticketEditIsArchivedCheckbox" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsArchived)
                        @Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
                    </div>
                </div>
                
            </div><!--end ticketEditRightColumn-->

            
        </div>
    }

    <div>
       
    </div>
</div>
