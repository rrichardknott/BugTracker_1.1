@using Microsoft.AspNet.Identity
@using BugTracker_1._1.Helpers;
@model BugTracker_1._1.Models.Ticket

@{
    ViewBag.Page = "Ticket Details";
    var projectHelper = new ProjectHelper();
    var ticketHelper = new TicketHelper();
}

<!--=======================================================-->
<div class="mb-3" id="ticketDetailsEditBackButtonContainer">
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn backgroundDarkBlue text-white width-8 mt-0", @id="ticketDetailsEditButton" })
    @Html.ActionLink("Back", "Index", new { id = Model.Id }, new { @class = "btn backgroundDarkBlue text-white width-8 mt-0", @id = "ticketDetailsBackButton" })
</div>

<h2 class="font-weight-bold">Details</h2>
<div class="table-responsive" id="ticketDetailsTableTop">
    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>
                    Project Name
                </th>
                <th>
                    Ticket Description
                </th>
                <th>
                    Priority
                </th>
                <th>
                    Status
                </th>
                <th>
                    Type
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(model => model.Project.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => model.IssueDescription)
                </td>
                <td>
                    @Html.DisplayFor(model => model.TicketPriority.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => model.TicketStatus.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => model.TicketType.Name)
                </td>
            </tr>
        </tbody>
    </table>
</div>


<div class="table-responsive mt-3" id="ticketDetailsTableBottom">
    <table class="table table-bordered border-bold" id="dataTable" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>
                    Submitter Name
                </th>
                <th>
                    Issue
                </th>
                <th>
                    Created
                </th>
                <th>
                    Updated
                </th>
                <th>
                    Resolved?
                </th>
                <th>
                    Archived?
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(model => model.Submitter.FullName)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Issue)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Created)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Updated)
                </td>
                <td id="ticketEditIsResolved">
                    @Html.DisplayFor(model => model.IsResloved)
                </td>
                <td id="ticketEditIsArchived">
                    @Html.DisplayFor(model => model.IsArchived)
                </td>
            </tr>
        </tbody>
    </table>
</div>

<!--=======================================================-->

<div class="row mb-3">
    @*<div class="col-12">*@
    <div class="container-fluid">
        <h2 class="font-weight-bold colorBlack pt-3" id="ticketDetailsCommentsH2">Comments</h2>
        <h2 class="font-weight-bold colorBlack pt-3" id="ticketDetailsAttachmentsH2">Attachments</h2>
        <div class="row" id="ticketDetailsCommentsAndAttachmentsRowContainer">
            <div class="col-6 p-0" id="ticketDetailsCommentsColumnContainer">

                @if (Model.Comments.Count != 0)
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    Submitter
                                </th>
                                <th>
                                    Comment Description
                                </th>
                                <th>
                                    Created
                                </th>
                                @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                                {
                                    <th></th>
                                }

                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model.Comments)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.User.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Comment)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Created)
                                    </td>
                                    @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                                    {
                                        <td>
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                        </td>
                                    }

                                </tr>
                            }
                        </tbody>
                    </table>

                }
                else
                {
                    <div class="text-center">
                        <h4 class="font-weight-bold p-3">No comments to display.</h4>
                    </div>
                }
                @if (ticketHelper.CanMakeComment(Model.Id))
                {
                    using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal" id="ticketCommentForm">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.Hidden("TicketId", Model.Id)
                            <div class="form-group">
                                @*@Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-lg-12" id="ticketCommentTextBox">
                                    @Html.TextArea("Comment", new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <button type="submit" id="ticketDetailsCreateCommentButton" class="btn backgroundDarkBlue text-white">Create Comment</button>
                                </div>
                            </div>
                        </div>
                    }
                }

            </div>

            <div class="col-6 p-0">
                @if (ticketHelper.CanMakeComment(Model.Id))
                {
                    <table class="table">
                        <thead>
                            <tr id="ticketAttachmentsTableRowHeading">
                                <th>
                                    @Html.DisplayName("Icon")
                                </th>
                                <th>
                                    @Html.DisplayName("Name")
                                </th>
                                <th>
                                    @Html.DisplayName("Description")
                                </th>
                                <th>
                                    @Html.DisplayName("File Path")
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var attachment in Model.Attachments.ToList())
                            {
                                <tr>
                                    <td>
                                        🟢
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => attachment.FileName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => attachment.Description)
                                    </td>
                                    <td>
                                        <a target="_blank" href="@attachment.FilePath">@attachment.FilePath</a>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>

                    using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("TicketId", Model.Id)

                        <div class="form-group">
                            @Html.Label("File Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("FileName", new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("Description", new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>



                        <div class="form-group pt-3">
                            <div class="col-md-10 mt-2">
                                <input type="file" name="file" />
                            </div>
                        </div>

                        <div class="form-group ">
                            <div class="col-md-offset-2 col-md-10 ">
                                <input type="submit" value="Add Attachment" class="btn backgroundDarkBlue text-white mt-2" style="width:30%" />
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <!--=======================================================================-->
        <h3 class="font-weight-bold mt-3">Ticket History</h3>
        <div class="row p-0" id="ticketHistoryRowContainer">
            <div class="col p-0">
                <table id="myTable" class="table m-0 width-100">
                    <thead>
                        <tr>
                            <th>
                                Changed By
                            </th>
                            <th>
                                Property Type
                            </th>
                            <th>
                                Previous Value
                            </th>
                            <th>
                                Current Value
                            </th>
                            <th>
                                Changed On
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Histories)
                        {
                            <tr>

                                <td>
                                    @Html.DisplayFor(modelItem => item.User.FullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Property)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OldValue)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NewValue)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ChangedOn)
                                </td>
                            </tr>
                        }

                    </tbody>

                </table>
            </div>

        </div>

    </div>

</div>